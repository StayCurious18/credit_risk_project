# -*- coding: utf-8 -*-
"""credit_risk project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NzZpuoFmIT8m33BcYb19L5coVjcGfyyh
"""

# ‚úÖ STEP 1: Install dan import dependencies
!pip install pandas seaborn matplotlib replicate --quiet

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import replicate
import os

# ‚úÖ STEP 2: Set API Key Replicate
# Ganti dengan kunci API milikmu, atau set di cell terpisah sebagai variabel lingkungan
os.environ["REPLICATE_API_TOKEN"] = "r8_I95fxsCofgilSMwnfNchRwmDRQmz1b24UGMqf"

# ‚úÖ STEP 3: Load dan persiapkan data
df = pd.read_csv("/content/german_credit_data.csv", encoding="ISO-8859-1", on_bad_lines='skip', engine='python')

# Perbaiki nama kolom
df.columns = df.columns.str.strip().str.lower().str.replace(' ', '_')

# Lihat ringkasan kolom
print("Kolom tersedia:", df.columns.tolist())
df.head()

# ‚úÖ STEP 4: Ringkasan deskriptif data sebagai bahan prompt
summary = f"""
Dataset German Credit memiliki {len(df)} baris data.
Kolom usia memiliki rata-rata: {df['age'].mean():.1f} tahun.
Rata-rata jumlah kredit: {df['credit_amount'].mean():.1f} EUR.
Distribusi tujuan kredit (purpose): {df['purpose'].value_counts().to_dict()}
"""

print(summary)

!pip install replicate

os.environ["REPLICATE_API_TOKEN"] = "r8_I95fxsCofgilSMwnfNchRwmDRQmz1b24UGMqf"

# ‚ïê‚ïê STEP 1: Instal dan Import
!pip install replicate pandas matplotlib seaborn --quiet
import os
import pandas as pd
import replicate
import seaborn as sns
import matplotlib.pyplot as plt

# ‚ïê‚ïê STEP 4: Load dataset dan koreksi nama kolom
df = pd.read_csv("german_credit_data.csv", encoding="ISO-8859-1", on_bad_lines='skip', engine='python')
df.columns = df.columns.str.strip().str.lower().str.replace(" ", "_")
print("Kolom tersedia:", df.columns.tolist())

# ‚ïê‚ïê STEP 5: Ringkasan data sebagai input prompt
summary = f"""
Dataset German Credit memiliki {len(df)} baris data.
Rata-rata usia: {df['age'].mean():.1f} tahun.
Rata-rata jumlah kredit: {df['credit_amount'].mean():.1f} EUR.
Distribusi tujuan pinjaman (purpose): {df.get('purpose', pd.Series()).value_counts().to_dict()}
"""
print(summary)

import replicate
client = replicate.Client(api_token=os.environ["REPLICATE_API_TOKEN"])
print("‚úÖ API key berhasil dikenali")

# --- Install dan setup ---
!pip install replicate pandas

import os
import pandas as pd
import replicate

# üîê Masukkan API Token Replicate kamu di sini
os.environ["REPLICATE_API_TOKEN"] = "r8_I95fxsCofgilSMwnfNchRwmDRQmz1b24UGMqf"

# --- Load Data ---
df = pd.read_csv("german_credit_data.csv", encoding="ISO-8859-1", on_bad_lines="skip", engine="python")
df.columns = [c.lower().strip().replace(" ", "_") for c in df.columns]

# --- Ringkasan Data (Prompt Summary) ---
summary = f"""
Dataset ini berisi {len(df)} baris data.
Rata-rata umur peminjam: {df['age'].mean():.1f} tahun.
Rata-rata jumlah kredit: {df['credit_amount'].mean():.1f} EUR.
Distribusi pekerjaan (job): {df['job'].value_counts().to_dict()}
"""

print("üßæ Ringkasan:\n", summary)

# --- Buat Prompt untuk Granite ---
prompt = f"""
Berikut adalah ringkasan statistik dari data German Credit:

{summary}

Berdasarkan informasi tersebut, analisis tren utama dan potensi risiko kredit yang perlu diperhatikan. Apakah ada kelompok umur atau pekerjaan tertentu yang menunjukkan indikasi risiko tinggi?
"""

# --- Jalankan Model IBM Granite ---
output = client.run(
    "ibm-granite/granite-3.3-8b-instruct",
    input={
        "prompt": prompt,
        "temperature": 0.5,
        "top_p": 1,
        "max_tokens": 400
    }
)

# --- Output Insight ---
print("\nü§ñ Insight dari IBM Granite:\n")
print("".join(output))

# ‚ïê‚ïê STEP 7: Visualisasi korelasi singkat
df_encoded = df.copy()
df_encoded['sex'] = df_encoded['sex'].map({'male':1,'female':0})
df_encoded['risk'] = df_encoded.get('risk', pd.Series()).map({'good':0,'bad':1})
corr_vars = [c for c in ['age','sex','job','credit_amount','risk'] if c in df_encoded.columns]
corr = df_encoded[corr_vars].corr()

plt.figure(figsize=(6,5))
sns.heatmap(corr, annot=True, cmap="coolwarm", fmt=".2f")
plt.title("Correlation Heatmap")
plt.tight_layout()
plt.show()

# Step 1: Install PyGithub
!pip install PyGithub

# Step 2: Upload File ke GitHub
from github import Github
from getpass import getpass
from datetime import datetime
import os

# Masukkan token kamu
GITHUB_TOKEN = getpass("Masukkan GitHub Personal Access Token:")
GITHUB_REPO = "credit_risk_project"  # <-- Ganti!
GITHUB_BRANCH = "main"
GITHUB_PATH = "credit.py"    # misalnya: "scripts/credit_risk.py"
LOCAL_FILE_PATH = "/content/credit_risk.py"  # File di Colab

# Autentikasi dan unggah
g = Github(GITHUB_TOKEN)
repo = g.get_repo(GITHUB_REPO)

with open(LOCAL_FILE_PATH, "r", encoding="utf-8") as file:
    content = file.read()

try:
    contents = repo.get_contents(GITHUB_PATH, ref=GITHUB_BRANCH)
    repo.update_file(contents.path, f"Update via Colab at {datetime.now()}", content, contents.sha, branch=GITHUB_BRANCH)
    print("‚úÖ File berhasil diperbarui di GitHub.")
except:
    repo.create_file(GITHUB_PATH, f"Upload via Colab at {datetime.now()}", content, branch=GITHUB_BRANCH)
    print("‚úÖ File berhasil diunggah ke GitHub.")

from google.colab import drive
drive.mount('/content/drive')