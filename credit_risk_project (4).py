# -*- coding: utf-8 -*-
"""credit_risk project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NzZpuoFmIT8m33BcYb19L5coVjcGfyyh
"""

!pip install pandas seaborn matplotlib replicate --quiet

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import replicate
import os

df = pd.read_csv("/content/german_credit_data.csv", encoding="ISO-8859-1", on_bad_lines='skip', engine='python')


df.columns = df.columns.str.strip().str.lower().str.replace(' ', '_')

print("Kolom tersedia:", df.columns.tolist())
df.head()

summary = f"""
Dataset German Credit memiliki {len(df)} baris data.
Kolom usia memiliki rata-rata: {df['age'].mean():.1f} tahun.
Rata-rata jumlah kredit: {df['credit_amount'].mean():.1f} EUR.
Distribusi tujuan kredit (purpose): {df['purpose'].value_counts().to_dict()}
"""

print(summary)

!pip install replicate

!pip install replicate pandas matplotlib seaborn --quiet
import os
import pandas as pd
import replicate
import seaborn as sns
import matplotlib.pyplot as plt



df = pd.read_csv("german_credit_data.csv", encoding="ISO-8859-1", on_bad_lines='skip', engine='python')
df.columns = df.columns.str.strip().str.lower().str.replace(" ", "_")
print("Kolom tersedia:", df.columns.tolist())

summary = f"""
Dataset German Credit memiliki {len(df)} baris data.
Rata-rata usia: {df['age'].mean():.1f} tahun.
Rata-rata jumlah kredit: {df['credit_amount'].mean():.1f} EUR.
Distribusi tujuan pinjaman (purpose): {df.get('purpose', pd.Series()).value_counts().to_dict()}
"""
print(summary)

import replicate
client = replicate.Client(api_token=os.environ["REPLICATE_API_TOKEN"])
print("‚úÖ API key berhasil dikenali")

prompt = f"""
Berikut adalah ringkasan statistik dari data German Credit:

{summary}

Berdasarkan informasi tersebut, analisis tren utama dan potensi risiko kredit yang perlu diperhatikan. Apakah ada kelompok umur atau pekerjaan tertentu yang menunjukkan indikasi risiko tinggi?
"""


output = client.run(
    "ibm-granite/granite-3.3-8b-instruct",
    input={
        "prompt": prompt,
        "temperature": 0.5,
        "top_p": 1,
        "max_tokens": 400
    }
)


print("\nü§ñ Insight dari IBM Granite:\n")
print("".join(output))

# Ganti isi token sesuai punyamu
with open(".env", "w") as f:
    f.write("REPLICATE_API_TOKEN=rr8_ClcAyi6y5OrDROpNip5z1LabjC7SDwN16hlgK\n")

!pip install python-dotenv

from dotenv import load_dotenv
import os

# Load dari file .env
load_dotenv()

# Ambil token dari environment
token = os.getenv("REPLICATE_API_TOKEN")
print("Token dimuat:", "‚úÖ" if token else "‚ùå")  # jangan print tokennya langsung ya

import replicate

client = replicate.Client(api_token=token)

df_encoded = df.copy()
df_encoded['sex'] = df_encoded['sex'].map({'male':1,'female':0})
df_encoded['risk'] = df_encoded.get('risk', pd.Series()).map({'good':0,'bad':1})
corr_vars = [c for c in ['age','sex','job','credit_amount','risk'] if c in df_encoded.columns]
corr = df_encoded[corr_vars].corr()

plt.figure(figsize=(6,5))
sns.heatmap(corr, annot=True, cmap="coolwarm", fmt=".2f")
plt.title("Correlation Heatmap")
plt.tight_layout()
plt.show()

from google.colab import drive
drive.mount('/content/drive')

